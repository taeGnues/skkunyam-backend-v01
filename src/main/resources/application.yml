spring:
  profiles:
    group: # Run - Edit Configurations - Active Profiles에서 설정
      dev: common, dev
      prod: common, prod
---
spring: # 공통
  session:
    store-type: jdbc
  config:
    activate:
      on-profile: "common"
  application:
    name: skkunyam
  sql:
    init:
      platform: mysql
  datasource:
    username: root
    url: jdbc:mysql://localhost:3306/skkunyam?characterEncoding=UTF-8
    password: a01084204241
    driver-class-name: com.mysql.cj.jdbc.Driver # mysql 8버전
#    driver-class-name: com.mysql.jdbc.Driver # mysql 5버전
  OAuth2:
    kakao:
      url: https://kauth.kakao.com/oauth/authorize
      client-id: 7c8dce76f04cb7bcf9d265fa84c4dde2 # 앱 REST API 키
      callback-login-url: http://localhost/app/users/auth/kakao/login/callback # 인가 코드 전달받을 서비스 서버의 URI
file:
  dir:
    cafeteria: /Users/gnues/Documents/skkunyam-backend-v01/Images/cafeteriaImages/
    customer: /Users/gnues/Documents/skkunyam-backend-v01/Images/customerImages/
    menu: /Users/gnues/Documents/skkunyam-backend-v01/Images/menuImages/
cloud:
  aws:
    s3:
      bucket: skkunyam-dev-bucket # 버킷 이름
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: AKIAZNAT5WB33EEQFDVC #<발급받은 accessKey> git Ignore 필수
      secretKey: IBM2+fNdor2lTyyk54kfy+0W6kBfGzBxrmVSVXDK #<발급받은 secretKey> git Ignore 필수

springdoc:
  swagger-ui:
    # swagger-ui 접근 경로. default 값은 /swagger-ui.html이다.
    path: /swagger-ui.html

    # 각 API의 그룹 표시 순서
    # path, query, body, response 순으로 출력
    groups-order: DESC

    # 태그 정렬 순서.
    # alpha: 알파벳 순 정렬
    # method: OpenAPI specification file에 원하는 태그 정렬 방식 직접 기재
    tags-sorter: alpha

    # 컨트롤러 정렬 순서.
    # method는 delete - get - patch - post - put 순으로 정렬된다.
    # alpha를 사용해 알파벳 순으로 정렬할 수 있다.
    operations-sorter: method

    # swagger-ui default url인 petstore html의 비활성화 설정
    disable-swagger-default-url: true

    # swagger-ui에서 try 했을 때 request duration을 알려주는 설정
    display-request-duration: true

  # openAPI 접근 경로. default 값은 /v3/api-docs 이다.
  api-docs:
    path: /api-docs

  # Spring Actuator의 endpoint까지 보여줄 것인지?
  show-actuator: true

  # request media type 의 기본 값
  default-consumes-media-type: application/json

  # response media type 의 기본 값
  default-produces-media-type: application/json

  # 해당 패턴에 매칭되는 controller만 swagger-ui에 노출한다.
  paths-to-match:
    - /**
server:
  port: 8080

jwt:
  secret-key: UwKYibQQgkW7g-*k.ap9kje-wxBHb9wdXoBT4vnt4P3sJWt-Nu  # JWT key. 서버에서 쓰는 비밀키 (비대칭 암호화)

---
spring: # 배포용 프로필
  config:
    activate:
      on-profile: "prod"
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: false # DDl 생성 시 데이터베이스 고유의 기능 사용여부
    show-sql: false # 실행되는 쿼리문 보여주기 여부
    properties:
      hibernate:
        format_sql: false
---
spring: # 개발용 프로필
  config:
    activate:
      on-profile: "dev"
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    generate-ddl: false # DDL 문 자동 생성
    show-sql: true
    properties:
      hibernate:
        format_sql: true

